import{d as h,h as f,c as y,b as e,u as b,t as i,I as u,J as r,K as I,B as p,L as k,j as M,M as B,N as E,p as x,e as S,o as w,_ as P}from"../main.js";const K=t=>(x("data-v-0c855b4d"),t=t(),S(),t),T={class:"message-fields-wrapper"},V={class:"message-fields"},C={class:"message-fields__field"},D=K(()=>e("label",{for:"message"},[e("strong",null,"Message to broadcast")],-1)),F={class:"field-elements"},N=["value"],j={class:"send-btn-wrapper"},H={class:"error"},J=h({__name:"MessageInput",props:{sentEventIds:null,isSendingMessage:{type:Boolean}},emits:["broadcastEvent"],setup(t,{emit:_}){const g=t,s=f(""),v=async()=>{const a=u.value?u.value.trim():"";if(!a.length){s.value="Please provide your private key or generate random key.";return}const n=r.value.trim();if(!n.length){s.value="Please provide message to broadcast.";return}let c;try{const{data:l}=I.decode(a);c=l,p.update(k(c))}catch{s.value="Invalid private key. Please check it and try again.";return}const d=M.value;if(!d||d.status!==1){s.value="Please connect to relay first.";return}const o={kind:1,pubkey:p.value,created_at:Math.floor(Date.now()/1e3),content:n,tags:[],id:"",sig:""};if(o.id=B(o),o.sig=E(o,c),g.sentEventIds.has(o.id)){s.value="The same event can't be sent twice (same id, signature).";return}s.value="",_("broadcastEvent",o,"text")},m=a=>{var n;r.update((n=a==null?void 0:a.target)==null?void 0:n.value)};return(a,n)=>(w(),y("div",T,[e("div",V,[e("div",C,[D,e("div",F,[e("textarea",{class:"message-input",name:"message",id:"message",cols:"30",rows:"3",value:b(r).value,onInput:m,placeholder:"Test message ðŸ‘‹"},null,40,N)]),e("div",j,[e("button",{class:"send-btn",onClick:v},i(t.isSendingMessage?"Broadcasting...":"Broadcast"),1)])])]),e("div",H,i(s.value),1)]))}});const R=P(J,[["__scopeId","data-v-0c855b4d"]]);export{R as default};
