import{d as I,c as t,F as v,r as E,o as s,a as z,E as O,_ as f,b as o,p as C,e as B,t as p,u as G,f as H,g as J,h as Q,i as g,j as W,w as X,k as Y,l as Z,m as ee,n as N,q as a,s as w,v as R,P as se,x as te,D as x}from"../main.js";import{u as ne}from"./PubKey-e93ab789.js";const ae=I({__name:"RelayEventsList",props:{events:{},pubKey:{},currentRelays:{}},emits:["toggleRawData"],setup(n,{emit:r}){const c=r,_=e=>{c("toggleRawData",e)};return(e,u)=>(s(),t("div",null,[(s(!0),t(v,null,E(e.events,(l,y)=>(s(),z(O,{key:l.id,class:"event",onToggleRawData:_,event:l,pubKey:e.pubKey,index:y,showReplies:!0,hasReplyBtn:!0,sliceText:150,currentRelays:e.currentRelays},null,8,["event","pubKey","index","currentRelays"]))),128))]))}});const oe=f(ae,[["__scopeId","data-v-9689244a"]]),ce=n=>(C("data-v-2db5cc65"),n=n(),B(),n),le={class:"log"},re=ce(()=>o("strong",null,"Relay events log",-1)),_e={class:"log__list"},ie={class:"log__list-item"},ue={key:0},de={key:1},ge=I({__name:"RelayLog",props:{eventsLog:{}},setup(n){const r=n;return(c,_)=>(s(),t("div",le,[re,o("ul",_e,[(s(!0),t(v,null,E(r.eventsLog,e=>(s(),t("li",ie,[(s(!0),t(v,null,E(e,({type:u,value:l})=>(s(),t(v,null,[u==="text"?(s(),t("span",ue,p(l),1)):(s(),t("b",de,p(l),1))],64))),256))]))),256))])]))}});const ve=f(ge,[["__scopeId","data-v-2db5cc65"]]),pe=n=>(C("data-v-29465870"),n=n(),B(),n),ye={id:"feed"},me={class:"columns"},he={key:0,class:"connecting-notice"},we={key:0,class:"new-events__imgs"},Re=["src"],Ee=["src"],Ie={class:"new-events__text"},fe=pe(()=>o("b",{class:"new-events__arrow"},"â†‘",-1)),be=I({__name:"Feed",props:{eventsLog:{}},emits:["loadNewRelayEvents"],setup(n,{emit:r}){const c=G(),_=H(),e=J(),u=ne(),l=Q(),y=r,$=g(()=>e.newEventsBadgeImageUrls[0]),F=g(()=>e.newEventsBadgeImageUrls[1]),m=W(1),b=g(()=>Math.ceil(e.paginationEventsIds.length/x)),L=te(),k=g(()=>L.path);X(()=>L.path,async()=>{m.value>1&&h(1)}),Y(()=>{b.value>1&&h(1)});const h=async d=>{const i=c.currentRelay;if(!i)return;const S=x,P=(d-1)*S,U=P+S,V=e.paginationEventsIds.slice().reverse().slice(P,U),T=await i.list([{ids:V}]),A=T.map(q=>q.pubkey),j=await i.list([{kinds:[0],authors:A}]);let D=Z(T,j);const M=[i.url];await ee(D,M,l.feedPool),e.updateEvents(D),m.value=d},K=async()=>{y("loadNewRelayEvents")};return(d,i)=>(s(),t("div",ye,[o("div",me,[o("div",{class:N(["events",{"d-md-none":k.value==="/log"}])},[a(c).isConnectingToRelay?(s(),t("div",he," Loading "+p(a(c).currentRelay?"new":"")+" relay feed... ",1)):w("",!0),a(e).showNewEventsBadge?(s(),t("div",{key:1,onClick:K,class:"new-events"},[a(_).showImages?(s(),t("div",we,[o("img",{class:"new-events__img",src:$.value,alt:"img"},null,8,Re),o("img",{class:"new-events__img",src:F.value,alt:"img"},null,8,Ee)])):w("",!0),o("span",Ie,p(a(e).newEventsBadgeCount)+" new notes",1),fe])):w("",!0),R(oe,{events:a(e).events,pubKey:a(u).fromPrivate,showImages:a(_).showImages,onToggleRawData:a(e).toggleEventRawData,currentRelays:a(c).connectedRelayUrls},null,8,["events","pubKey","showImages","onToggleRawData","currentRelays"]),R(se,{pagesCount:b.value,currentPage:m.value,onShowPage:h},null,8,["pagesCount","currentPage"])],2),o("div",{class:N(["log-wrapper",{"d-md-none":k.value!=="/log"}])},[R(ve,{eventsLog:d.eventsLog},null,8,["eventsLog"])],2)])]))}});const Pe=f(be,[["__scopeId","data-v-29465870"]]);export{Pe as default};
